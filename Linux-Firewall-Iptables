iptables is a Linux firewall tool used to control incoming and outgoing network traffic on your system.
It works by setting rules that determine what network packets are allowed, dropped, or redirected;
making it a core part of network security and system hardening in Linux.

[+] Usage: 

[+] List IPtables: # sudo iptables -L
[+] Flash IPtables: # sudo iptables -F

[+] IPtables help screen:
# sudo iptables -h / --help

[+] Drop a Connection from an IP Address:
# sudo iptables -A INPUT -s [IP] -j DROP
# sudo iptables -A INPUT -s [IP] -j DROP

[+] Accept a Connection to the system:
# sudo iptables -A INPUT -p tcp  --dport ssh -j Accept
# sudo iptables -A INPUT -s [IP] -p tcp --dport ssh -j DROP

[+] Build Output rules:
# sudo iptables -A OUTPUT -p tcp -d google.com -j ACCEPT
# sudo sudo iptables -A OUTPUT -p tcp --dport 80 -j DROP
# sudo iptables -A OUTPUT -p tcp --dport 443 -j DROP

[+] Specify what adaper to allow connection:
# sudo iptables -A OUTPUT -i eth0 -s [IP] -j ACCEPT
# sudo iptables -A -i eth0 -p icmp -j DROP

[+] Accept Traffic from one source only:
# sudo iptables -A OUTPUT -d googe.com -j ACCEPT 
# sudo iptables -A OUTPUT -p tcp --dport 80 -j DROP
# sudo iptables -A OUTPUT -p tcp --dport 443 DROP

[+] Accept UDP Traffic: 
# sudo iptables -A OUTPUT -p udp --dport 53 -j ACCEPT
# sudo iptables -A OUTPUT -p tcp --dport 110 -j ACCEPT
# sudo iptables -A OUTPUT -p tcp --dport 445 -j ACCEPT
# sudo iptables -A OUTPUT -p tcp -s [IP] --dport ssh -j ACCEPT

[+] Specify Flags rule:
# sudo iptables -A OUTPUT -p tcp --tcp-flags FIN, RST -j DROP
# sudo iptables -A OUTPUT -s [IP] -p tcp --tcp-flags SYN, ACK -j ACCEPT

[+] Import Snort rules to iptables:
Go To /etc/snort/rules then run # sudo fwsnort -snort-rdir /etc/snort/rules 
After that navigate to /var/lib/fwsnort and then run # sudo ./fwsnort.sh
To see the new iptables list run # sudo iptables -L

[+] Drop some IP Address:
# sudo iptables -A INPUT -s [IP] -j DROP
# sudo iptables -A INPUT -s [IP]/24 -j DROP
# sudo iptables -A INPUT -p tcp --dport ssh -j DROP

[+] Show iptables list with numbers:
# sudo iptales -L --line-numbers
# sudo iptables -A INPUT -p tcp --dport ssh -s [IP] -n state --state NEW,ESTABLISHED -j ACCEPT
# sudo iptables -A OUTPUT -p tcp -d google.com -j ACCEPT

[+] Delete some rules from iptables:
# sudo iptabless -D OUTPUT -p tcp -d google.com -j ACEPT
# sudo iptables -D OUTPUT 1

[+] Adding some output rules:
# sudo iptables -A OUTPUT -p tcp --dport 80 -j DROP
# sudo iptables -A OUTPUT -p tcp --dport 443 -j DROP
# sudo iptables -A OUTPUT -p udp -s [IP] --dport 53 -j ACCEPT

[+] Adding some input rules:
# sudo iptables -A INPUT -p icmp -j ACCEPT
# sudo iptables -A INPUT -p tcp --tcp-flags SYN, FIN -j DROP
# sudo iptables -A INPUT -p tcp --dport ssh -j DROP
# sudo iptables -A INPUT -p udp --dport google.com -j DROP

# sudo iptables -I OUTPUT 2 -s [IP] -p tcp -d 10.10.10.10 -j DROP
# sudo iptables -I OUTPUT 7 -s [IP] -p udp --dport 53 -j ACCEPT

[+] Building a Network translation with iptables:
# sudo iptables -t not -A PREROUTING -p tcp --dport 80 -i eth0 -j DNAT --to [IP]
# sudo iptables -t not -A PREROUTING -p tcp --dport 443 -i eth0 -j DNAT --to [IP]:443
# sudo iptables -t not -A PREROUTING -p tcp --dport 53 -i eth0 -j DNAT --to [IP]:53

# sudo iptables -t not -A POSTROUTING -s [IP] -o eth0 -j ACCEPT 
# cat /proc/sys/net/ipv4/ip_forward
# echo 1 /proc/sys/net/ipv4/ip_forward
# cat /proc/sys/net/ipv4/ip_forward

# iptables_save



